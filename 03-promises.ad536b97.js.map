{"mappings":"gfACA,IAAAA,EAAAC,EAAA,SAEMC,EAAeC,SAASC,cAAc,gBACtCC,EAAqBF,SAASC,cAAc,eAC5CE,EAAoBH,SAASC,cAAc,iBAC3CG,EAAYJ,SAASC,cAAc,gBACzC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YACE,WACMH,EAEFF,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,S,GAGvBA,EACAD,E,IAIN,IAAMS,EAAY,SAAAC,G,IAAGV,EAAQU,EAARV,SAAUC,EAAKS,EAALT,MAC7BU,QAAQC,IAAI,uBAAwCC,OAAfb,EAAS,QAAYa,OAANZ,EAAM,OAC1DV,EAAAuB,OAAOC,QAAQ,qBAAoCF,OAAfb,EAAS,QAAYa,OAANZ,EAAM,MAAK,CAC5De,QAAS,M,EAGPC,EAAW,SAAAP,G,IAAGV,EAAQU,EAARV,SAAUC,EAAKS,EAALT,MAC5BU,QAAQC,IAAI,sBAAqCC,OAAfb,EAAS,QAAYa,OAANZ,EAAM,OACvDV,EAAAuB,OAAOI,QAAQ,oBAAmCL,OAAfb,EAAS,QAAYa,OAANZ,EAAM,MAAK,CAC3De,QAAS,M,EAGblB,EAAUqB,iBAAiB,SAAS,SAAAC,GAClCA,EAAEC,iBACF,IAAK,IAAIC,EAAI,EAAGA,EAAIC,OAAO1B,EAAkB2B,OAAQF,IAAK,CAKxDvB,EAAcuB,EAAI,EAFhBC,OAAO3B,EAAmB4B,OAASF,EAAIC,OAAO9B,EAAa+B,QAG1DC,KAAKhB,GACLiB,MAAMT,E","sources":["src/js/03-promises.js"],"sourcesContent":["//\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst btnBaseDelay = document.querySelector('[name=delay]');\nconst btnDelayPerPromise = document.querySelector('[name=step]');\nconst btnPromisesAmount = document.querySelector('[name=amount]');\nconst btnCreate = document.querySelector('.form button');\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(\n      () => {\n        if (shouldResolve) {\n          // Fulfill\n          resolve({ position, delay });\n        } else {\n          // Reject\n          reject({ position, delay });\n        }\n      },\n      delay,\n      position\n    );\n  });\n}\nconst onSuccess = ({ position, delay }) => {\n  console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  Notify.success(`Fulfilled promise ${position} in ${delay}ms`, {\n    timeout: 2500,\n  });\n};\nconst onReject = ({ position, delay }) => {\n  console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  Notify.failure(`Rejected promise ${position} in ${delay}ms`, {\n    timeout: 2500,\n  });\n};\nbtnCreate.addEventListener('click', e => {\n  e.preventDefault();\n  for (let i = 0; i < Number(btnPromisesAmount.value); i++) {\n    // console.log(i);\n    let delay =\n      Number(btnDelayPerPromise.value) * i + Number(btnBaseDelay.value);\n    let timer = null;\n    createPromise(i + 1, delay)\n      .then(onSuccess)\n      .catch(onReject);\n  }\n\n  //\n});\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$btnBaseDelay","document","querySelector","$ce04d3a99e08e73b$var$btnDelayPerPromise","$ce04d3a99e08e73b$var$btnPromisesAmount","$ce04d3a99e08e73b$var$btnCreate","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$onSuccess","param","console","log","concat","Notify","success","timeout","$ce04d3a99e08e73b$var$onReject","failure","addEventListener","e","preventDefault","i","Number","value","then","catch"],"version":3,"file":"03-promises.ad536b97.js.map"}