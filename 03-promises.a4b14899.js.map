{"mappings":"oeACA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAeC,SAASC,cAAc,gBACtCC,EAAqBF,SAASC,cAAc,eAC5CE,EAAoBH,SAASC,cAAc,iBAC3CG,EAAYJ,SAASC,cAAc,gBACzC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YACE,KACMH,EAEFF,EAAQ,C,SAAEH,E,MAAUC,IAGpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAG/BA,EACAD,EACD,G,CAGL,MAAMS,EAAY,EAACT,SAAEA,EAAQC,MAAEA,MAC7BS,QAAQC,IAAI,uBAAqBX,QAAiBC,OAClDV,EAAAqB,OAAOC,QAAQ,qBAAqBb,QAAeC,MAAW,CAC5Da,QAAS,MACT,EAEEC,EAAW,EAACf,SAAEA,EAAQC,MAAEA,MAC5BS,QAAQC,IAAI,sBAAoBX,QAAeC,OAC/CV,EAAAqB,OAAOI,QAAQ,oBAAoBhB,QAAeC,MAAW,CAC3Da,QAAS,MACT,EAEJhB,EAAUmB,iBAAiB,SAASC,IAClCA,EAAEC,iBACF,IAAK,IAAIC,EAAI,EAAGA,EAAIC,OAAOxB,EAAkByB,OAAQF,IAAK,CAKxDrB,EAAcqB,EAFZC,OAAOzB,EAAmB0B,OAASF,EAAIC,OAAO5B,EAAa6B,QAErCC,KAAKd,GAAWe,MAAMT,E","sources":["src/js/03-promises.js"],"sourcesContent":["//\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst btnBaseDelay = document.querySelector('[name=delay]');\nconst btnDelayPerPromise = document.querySelector('[name=step]');\nconst btnPromisesAmount = document.querySelector('[name=amount]');\nconst btnCreate = document.querySelector('.form button');\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(\n      () => {\n        if (shouldResolve) {\n          // Fulfill\n          resolve({ position, delay });\n        } else {\n          // Reject\n          reject({ position, delay });\n        }\n      },\n      delay,\n      position\n    );\n  });\n}\nconst onSuccess = ({ position, delay }) => {\n  console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  Notify.success(`Fulfilled promise ${position} in ${delay}ms`, {\n    timeout: 2500,\n  });\n};\nconst onReject = ({ position, delay }) => {\n  console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  Notify.failure(`Rejected promise ${position} in ${delay}ms`, {\n    timeout: 2500,\n  });\n};\nbtnCreate.addEventListener('click', e => {\n  e.preventDefault();\n  for (let i = 0; i < Number(btnPromisesAmount.value); i++) {\n    // console.log(i);\n    let delay =\n      Number(btnDelayPerPromise.value) * i + Number(btnBaseDelay.value);\n    let timer = null;\n    createPromise(i, delay).then(onSuccess).catch(onReject);\n  }\n\n  //\n});\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$btnBaseDelay","document","querySelector","$47d4ff9957288465$var$btnDelayPerPromise","$47d4ff9957288465$var$btnPromisesAmount","$47d4ff9957288465$var$btnCreate","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$onSuccess","console","log","Notify","success","timeout","$47d4ff9957288465$var$onReject","failure","addEventListener","e","preventDefault","i","Number","value","then","catch"],"version":3,"file":"03-promises.a4b14899.js.map"}